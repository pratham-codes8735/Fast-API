from fastapi import FastAPI,HTTPException,Path,Query
import json


app=FastAPI()

def load_data():
    with open('patients.json','r') as f:
        data=json.load(f)
    return data   

@app.get("/")
def hello():
    return {'message':'Patient management System API'}

@app.get("/about")
def about():
    return {'message':' An API to manage the details of your patients'}

@app.get('/view')
def view():
    data=load_data()
    return data  
                                                
@app.get('/patients_id{patient_Id}')
def view_patientid(patient_Id: str =Path(...,description="ID of the patient", example='P001')):
    data = load_data()

    if patient_Id in data:
        return data[patient_Id]
    else:
        raise HTTPException (status_code=404 , detail="Patient not found")
    
@app.get('/sort')
def sort_patients (sort_by:str = Query (..., description='sort on the basis of height , weight or bmi'),order :str = Query('asc',description='sort in ascending or descending order')):
    valid_fields=['height','weight','bmi' ]
    if sort_by not in valid_fields:
        raise HTTPException(status_code=400, detail=f"Invalid request please select from {valid_fields}")
    
    if order not in ['asc','desc']:
        raise HTTPException(status_code=400, detail='Invalid request , please select from asc or decs' )
    
    data =load_data()

    sort_order = True if order=='desc' else False

    sorted_data = sorted(data.values(), key=lambda x: x.get(sort_by, 0), reverse=sort_order)

    return sorted_data
